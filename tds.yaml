esphome:
  name: tds
  friendly_name: tds
  includes:
    - custom_tds.h

esp8266:
  board: d1_mini
  restore_from_flash: true

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key:  !secret api_key
  reboot_timeout: !secret api_reboot_timeout

ota:
  password: !secret ota_password

web_server:
  port: 80

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: !secret wifi_rcm_ssid
    password: !secret wifi_rcm_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name}"
    password: "12345678"

captive_portal:

uart:
  id: uart_bus
  tx_pin: D4
  rx_pin: D3
  baud_rate: 9600
  debug:

sensor:
- platform : custom
  lambda: |-
    auto my_sensor = new MyTDSSensor(id(uart_bus));
    App.register_component(my_sensor);
    return {my_sensor->input_tds_sensor,my_sensor->input_temp_sensor,my_sensor->output_tds_sensor,my_sensor->output_temp_sensor};
  
  sensors:
  - name: "Input Water TDS Sensor"
    icon: "mdi:cup-water"
  - name: "Input Water Temperature Sensor"
    unit_of_measurement: "°C"
    icon: "mdi:thermometer-water"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 2
  - name: "Output Water TDS Sensor"
    icon: "mdi:cup-water"
  - name: "Output Water Temperature Sensor"
    unit_of_measurement: °C
    icon: "mdi:thermometer-water"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 2
#status_led:
#  pin: D4

button:
  - platform: restart
    id: "restartButton"
    name: "System Restart"

time:
  - platform: sntp
    id: my_time
    timezone: Asia/Shanghai
    on_time:
      - seconds: 0
        minutes: 0
        hours: 2
        then:
          - button.press: restartButton